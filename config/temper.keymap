/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define QWERTY 0
#define NUM 1
#define NAV 2
#define FUN 3

&mt {
    tapping-term-ms = <140>;
    flavor = "tap-preferred";
};

&lt { tapping-term-ms = <140>; };

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        super_bspc: super_backspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LA(BACKSPACE)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        smart_shft: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&caps_word>;

            mods = <(MOD_LSFT)>;
        };

        comma_semi: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;

            mods = <(MOD_LSFT)>;
        };

        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;

            mods = <(MOD_LSFT)>;
        };

        qmrk_excl: qmrk_excl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;

            mods = <(MOD_LSFT)>;
        };

        slh_morph: slh_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;

            mods = <(MOD_LSFT)>;
        };

        amps_morph: amps_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&kp PIPE>;

            mods = <(MOD_LSFT)>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <120>;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };
    };

    combos {
        compatible = "zmk,combos";

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <27 28>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            display-name = "Base";
            bindings = <
  &hm ESCAPE Q  &kp W               &kp E               &kp R                  &kp T          &kp Y        &kp U          &kp I            &kp O    &hm BACKSLASH P
  &kp A         &hm LEFT_CONTROL S  &hm LEFT_ALT D      &kp F                  &kp G          &kp H        &kp J          &kp K            &kp L    &kp ENTER
  &kp Z         &kp X               &kp C               &kp V                  &kp B          &kp N        &kp M          &kp COMMA        &kp DOT  &hm QUESTION SLASH
                                    &hm LEFT_SHIFT TAB  &hm LEFT_GUI CAPSLOCK  &lt 1 SPACE    &lt 2 SPACE  &kp BACKSPACE  &lt 3 LG(SPACE)
            >;
        };

        num_layer {
            display-name = "Num";
            bindings = <
  &kp GRAVE                 &kp TILDE      &none           &none            &none     &kp MINUS      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &hm RIGHT_BRACKET LEFT_BRACKET
  &kp LS(LC(LG(NUMBER_4)))  &kp LG(LS(S))  &none           &kp LEFT_SHIFT   &none     &kp EQUAL      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &hm RIGHT_PARENTHESIS LEFT_PARENTHESIS
  &kp LG(LS(Z))             &none          &kp LEFT_ARROW  &kp RIGHT_ARROW  &none     &kp SQT        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &hm RIGHT_BRACE LEFT_BRACE
                                           &trans          &trans           &trans    &kp BACKSPACE  &kp N0        &kp DOT
            >;
        };

        nav_layer {
            display-name = "Nav";
            bindings = <
  &none  &trans  &trans  &trans  &trans    &trans             &none       &kp UP_ARROW  &none       &kp RG(BACKSPACE)
  &none  &none   &none   &trans  &trans    &kp C_VOLUME_UP    &kp LEFT    &kp DOWN      &kp RIGHT   &gresc
  &none  &trans  &trans  &trans  &trans    &kp C_VOLUME_DOWN  &kp C_PREV  &kp C_PP      &kp C_NEXT  &trans
                 &trans  &trans  &trans    &trans             &trans      &trans
            >;
        };

        layer_3 {
            bindings = <
  &trans          &trans  &trans  &trans  &trans    &kp RG(MINUS)  &trans  &kp RG(I)             &kp RG(O)              &kp RG(P)
  &bt BT_SEL 0    &trans  &trans  &trans  &trans    &kp RG(EQUAL)  &trans  &kp RG(LEFT_BRACKET)  &kp RG(RIGHT_BRACKET)  &trans
  &bt BT_CLR_ALL  &trans  &trans  &trans  &trans    &trans         &trans  &trans                &trans                 &trans
                          &trans  &trans  &trans    &trans         &trans  &trans
            >;

            label = "BT";
        };
    };
};
